// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

dataSource db {
  provider = "postgresql"
  url      = env("DATABASE_URL="postgresql://postgres:@localhost:5432/mydb?schema=public0"
}

generate client {
  provider = "prisma-client-js"
}

model User {
   id        Int       @id @default(autoIncrement())
  username  String    @unique
  password  String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cart      Cart?
  orders    Order[]
  reviews   Review[]
}

model Product {
  id Int @id @default(autoIncrement())
  name String 
  description String 
  price Float
  category String 
  imageUrl String
  stock Int
  CartItem CartItem[]
  OrderItem OrderItem[]
}

model Cart {
  id Int @id @default(autoIncrement())
  name String
  userId Int
  user User @relation(fields: [userId], references: [id])
  items CartItem[]
}

model CartItem {
id Int  @id @default(autoIncrement())
cartId Int
productId Int
quantity Int
cart Cart
product Product @relations(fields: [productId], references: [id])
}

Model Order {
id Int
userId Int
user User
items OrderItem[]
total Float
createdAt DateTime @default(now())
}

model OrderItem {
  id        Int      @id @default(autoIncrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
model CartItem {
  id        Int      @id @default(autoIncrement())
  cartId    Int
  productId Int
  quantity  Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}